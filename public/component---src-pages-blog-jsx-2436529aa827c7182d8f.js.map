{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/blog-posts/index.jsx","webpack:///./src/pages/blog.jsx"],"names":["classes","NotFoundPage","title","className","to","BlogPosts","posts","map","post","key","node","fields","slug","name","frontmatter","description","link","internal","Index","data","allMarkdownRemark","edges","noBlog","length","metadata","site","siteMetadata"],"mappings":"6FAAA,oEAMMA,EACG,oBADHA,EAEE,YAiBOC,UAdM,WAAH,OAChB,kBAAC,IAAM,KACL,kBAAC,IAAG,CAACC,MAAM,cACX,wBAAIC,UAAWH,GAAc,kBAC7B,sEAC2C,IACzC,kBAAC,OAAI,CAACG,UAAWH,EAAcI,GAAG,KAAG,oBAE9B,Q,4FCEEC,EAhBG,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACnB,OACE,kBAAC,IAAO,CAACJ,MAAM,kBACZI,EAAMC,KAAI,SAACC,GAAI,OACd,kBAAC,IAAW,CACVC,IAAKD,EAAKE,KAAKC,OAAOC,KACtBC,KAAML,EAAKE,KAAKI,YAAYZ,MAC5Ba,YAAaP,EAAKE,KAAKI,YAAYC,YACnCC,KAAMR,EAAKE,KAAKC,OAAOC,KACvBK,UAAQ,S,gDCYHC,UAjBD,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACTb,EAAQa,EAAKC,kBAAkBC,MAC/BC,GAAUhB,IAAUA,EAAMiB,OAEhC,OAAKjB,GAAUA,EAAMiB,OAKnB,kBAAC,IAAM,KACL,kBAAC,IAAG,CAACrB,MAAM,SACX,kBAAC,IAAM,CAACsB,SAAUL,EAAKM,KAAKC,gBAC1BJ,GAAU,kBAAC,EAAS,CAAChB,MAAOA,KAPzB,kBAAC,UAAQ","file":"component---src-pages-blog-jsx-2436529aa827c7182d8f.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Blog Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default BlogPosts;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport BlogPosts from '../components/blog-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const noBlog = !posts || !posts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Header metadata={data.site.siteMetadata} />\n      {!noBlog && <BlogPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n        email\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}